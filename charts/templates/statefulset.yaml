apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "marklogic.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "marklogic.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "marklogic.headlessServiceName" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "marklogic.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "marklogic.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "marklogic.serviceAccountName" . }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8}}
      {{- end }}
      containers:
        - name: marklogic-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy}}
          volumeMounts:
            - name: datadir
              mountPath: {{ .Values.persistence.mountPath }}
            {{- if .Values.extraVolumeMounts }}
              {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
          env:
            - name: MARKLOGIC_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "marklogic.fullname" . }}
                  key: username
            - name: MARKLOGIC_ADMIN_PASSWORD
              valueFrom:
                  secretKeyRef:
                    name: {{ include "marklogic.fullname" . }}
                    key: password
          envFrom:
            - configMapRef:
                name: {{ include "marklogic.fullname" . }}
          ports:
            - containerPort: 7997
              name: health-check
            - containerPort: 7998
              name: cluster-port
            - containerPort: 7999
              name: cluster-port2
            - containerPort: 8000
              name: app-services
            - containerPort: 8001
              name: admin
            - containerPort: 8002
              name: manage
            {{- if .Values.extraContainerPorts }}
              {{- toYaml .Values.extraContainerPorts | nindent 12 }}
            {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: health-check
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: health-check
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            exec:
              command:
                - ls
                - /var/opt/MarkLogic/ready
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.logging.enabled }}
        - name: fluent-bit
          image: fluent/fluent-bit:1.9.7
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: datadir
              mountPath: {{ .Values.persistence.mountPath }}
            {{- if .Values.extraVolumeMounts }}
              {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
            - name: {{ .Values.logging.configMapName }}
              mountPath: /fluent-bit/etc/fluent-bit.conf
              subPath: fluent-bit.conf
            - name: {{ .Values.logging.configMapName }}
              mountPath: /fluent-bit/etc/parsers.conf
              subPath: parsers.conf
        {{- end }}
      dnsConfig:
        searches:
          - {{ include "marklogic.headlessURL" . }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
        - name: {{ include "marklogic.fullname" . }}-registry
      {{- end }}
      volumes:
        {{- if .Values.logging.enabled }}
        - name: {{ .Values.logging.configMapName }}
          configMap:
            name: {{ .Values.logging.configMapName }}
        {{- end }}
      {{- if or (not .Values.persistence.enabled) (.Values.extraVolumes) }}
        {{- if not .Values.persistence.enabled }}
        - name: datadir
          emptyDir: {}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: datadir
        labels: 
          {{- include "marklogic.selectorLabels" . | nindent 10 }}
        {{- if .Values.persistence.annotations }}
        annotations:
          {{- toYaml .Values.persistence.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote}}
          {{- end }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end}}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- end }}
